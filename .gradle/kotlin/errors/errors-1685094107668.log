kotlin version: 1.8.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/michaelpaschenko/Desktop/NewMvvmArch/feature/cfeatureimpl/src/main/java/com/example/c_feature_impl/CMainScrean.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:51)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:237)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:68)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:55)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:147)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:94)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:147)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:94)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:43)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:321)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.runCodegen(KotlinToJVMBytecodeCompiler.kt:348)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules$cli(KotlinToJVMBytecodeCompiler.kt:123)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules$cli$default(KotlinToJVMBytecodeCompiler.kt:47)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:168)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:53)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:100)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:46)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:495)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:133)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:486)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:409)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$2$compile(IncrementalCompilerRunner.kt:210)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:241)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:103)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:627)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:101)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1587)
	at jdk.internal.reflect.GeneratedMethodAccessor114.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:CMainScreen visibility:public modality:FINAL <> (viewModel:com.example.c_feature_impl.viewmodel.Screen2ViewModel?, $composer:androidx.compose.runtime.Composer?, $changed:kotlin.Int, $default:kotlin.Int) returnType:kotlin.Unit
  annotations:
    Composable
    ComposableTarget(applier = 'androidx.compose.ui.UiComposable')
  VALUE_PARAMETER name:viewModel index:0 type:com.example.c_feature_impl.viewmodel.Screen2ViewModel? [assignable]
  VALUE_PARAMETER name:$composer index:1 type:androidx.compose.runtime.Composer? [assignable]
  VALUE_PARAMETER name:$changed index:2 type:kotlin.Int
  VALUE_PARAMETER MASK_FOR_DEFAULT_FUNCTION name:$default index:3 type:kotlin.Int
  BLOCK_BODY
    BLOCK type=kotlin.Unit origin=null
      SET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Unit origin=null
        CALL 'public abstract fun startRestartGroup (key: kotlin.Int): androidx.compose.runtime.Composer declared in androidx.compose.runtime.Composer' type=androidx.compose.runtime.Composer origin=null
          $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
          key: CONST Int type=kotlin.Int value=-2056074830
      CALL 'public final fun sourceInformation (composer: androidx.compose.runtime.Composer, sourceInformation: kotlin.String): kotlin.Unit declared in androidx.compose.runtime.ComposerKt' type=kotlin.Unit origin=null
        composer: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
        sourceInformation: CONST String type=kotlin.String value="C(CMainScreen)14@476L75,19@587L16,21@606L24:CMainScrean.kt#k75g6u"
    VAR name:$dirty type:kotlin.Int [val]
      GET_VAR '$changed: kotlin.Int declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
          arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR '$changed: kotlin.Int declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null
            other: CONST Int type=kotlin.Int value=14
          arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'val $dirty: kotlin.Int [val] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Unit origin=null
          CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null
            other: WHEN type=kotlin.Int origin=IF
              BRANCH
                if: CALL 'public final fun ANDAND (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                  arg0: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                    arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                      $this: GET_VAR '$default: kotlin.Int declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null
                      other: CONST Int type=kotlin.Int value=1
                    arg1: CONST Int type=kotlin.Int value=0
                  arg1: CALL 'public abstract fun changed (value: kotlin.Any?): kotlin.Boolean declared in androidx.compose.runtime.Composer' type=kotlin.Boolean origin=null
                    $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
                    value: GET_VAR 'viewModel: com.example.c_feature_impl.viewmodel.Screen2ViewModel? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=com.example.c_feature_impl.viewmodel.Screen2ViewModel? origin=null
                then: CONST Int type=kotlin.Int value=4
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CONST Int type=kotlin.Int value=2
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun OROR (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
          arg0: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
            $this: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
              arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null
                other: CONST Int type=kotlin.Int value=11
              arg1: CONST Int type=kotlin.Int value=2
          arg1: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
            $this: CALL 'public abstract fun <get-skipping> (): kotlin.Boolean declared in androidx.compose.runtime.Composer' type=kotlin.Boolean origin=null
              $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'public abstract fun startDefaults (): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
            $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
          WHEN type=kotlin.Unit origin=IF
            BRANCH
              if: CALL 'public final fun OROR (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                arg0: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                  arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                    $this: GET_VAR '$changed: kotlin.Int declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null
                    other: CONST Int type=kotlin.Int value=1
                  arg1: CONST Int type=kotlin.Int value=0
                arg1: CALL 'public abstract fun <get-defaultsInvalid> (): kotlin.Boolean declared in androidx.compose.runtime.Composer' type=kotlin.Boolean origin=null
                  $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
              then: COMPOSITE type=kotlin.Unit origin=null
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                      $this: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                        arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                          $this: GET_VAR '$default: kotlin.Int declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null
                          other: CONST Int type=kotlin.Int value=1
                        arg1: CONST Int type=kotlin.Int value=0
                    then: BLOCK type=kotlin.Unit origin=null
                      SET_VAR 'viewModel: com.example.c_feature_impl.viewmodel.Screen2ViewModel? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Unit origin=null
                        CALL 'public final fun daggerViewModel <T> (key: kotlin.String?, viewModelInstanceCreator: kotlin.Function0<T of com.example.common.compose.ViewModelKt.daggerViewModel>, $composer: androidx.compose.runtime.Composer?, $changed: kotlin.Int, $default: kotlin.Int): T of com.example.common.compose.ViewModelKt.daggerViewModel [inline] declared in com.example.common.compose.ViewModelKt' type=com.example.c_feature_impl.viewmodel.Screen2ViewModel origin=null
                          <T>: com.example.c_feature_impl.viewmodel.Screen2ViewModel
                          key: COMPOSITE type=kotlin.Nothing? origin=DEFAULT_VALUE
                            CONST Null type=kotlin.Nothing? value=null
                          viewModelInstanceCreator: BLOCK type=kotlin.Function0<com.example.c_feature_impl.viewmodel.Screen2ViewModel> origin=LAMBDA
                            COMPOSITE type=kotlin.Unit origin=null
                            FUNCTION_REFERENCE 'private final fun CMainScreen$lambda$0 (): com.example.c_feature_impl.viewmodel.Screen2ViewModel declared in com.example.c_feature_impl.CMainScreanKt' type=kotlin.Function0<com.example.c_feature_impl.viewmodel.Screen2ViewModel> origin=INLINE_LAMBDA reflectionTarget=null
                          $composer: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
                          $changed: CONST Int type=kotlin.Int value=0
                          $default: CONST Int type=kotlin.Int value=1
                      SET_VAR 'val $dirty: kotlin.Int [val] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Unit origin=null
                        CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                          $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null
                          other: CONST Int type=kotlin.Int value=-15
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: BLOCK type=kotlin.Unit origin=null
                CALL 'public abstract fun skipToGroupEnd (): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
                  $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                      $this: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                        arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                          $this: GET_VAR '$default: kotlin.Int declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null
                          other: CONST Int type=kotlin.Int value=1
                        arg1: CONST Int type=kotlin.Int value=0
                    then: SET_VAR 'val $dirty: kotlin.Int [val] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Unit origin=null
                      CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                        $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null
                        other: CONST Int type=kotlin.Int value=-15
          CALL 'public abstract fun endDefaults (): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
            $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
          WHEN type=kotlin.Unit origin=IF
            BRANCH
              if: CALL 'public final fun isTraceInProgress (): kotlin.Boolean declared in androidx.compose.runtime.ComposerKt' type=kotlin.Boolean origin=null
              then: CALL 'public final fun traceEventStart (key: kotlin.Int, dirty1: kotlin.Int, dirty2: kotlin.Int, info: kotlin.String): kotlin.Unit declared in androidx.compose.runtime.ComposerKt' type=kotlin.Unit origin=null
                key: CONST Int type=kotlin.Int value=-2056074830
                dirty1: GET_VAR '$changed: kotlin.Int declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null
                dirty2: CONST Int type=kotlin.Int value=-1
                info: CONST String type=kotlin.String value="com.example.c_feature_impl.CMainScreen (CMainScrean.kt:13)"
          VAR name:state type:androidx.compose.runtime.State<kotlin.String> [val]
            CALL 'public final fun collectAsState <T> (context: kotlin.coroutines.CoroutineContext?, $composer: androidx.compose.runtime.Composer?, $changed: kotlin.Int, $default: kotlin.Int): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<kotlin.String> origin=null
              <T>: kotlin.String
              $receiver: CALL 'public final fun <get-state> (): kotlinx.coroutines.flow.StateFlow<kotlin.String> declared in com.example.c_feature_impl.viewmodel.Screen2ViewModel' type=kotlinx.coroutines.flow.StateFlow<kotlin.String> origin=GET_PROPERTY
                $this: GET_VAR 'viewModel: com.example.c_feature_impl.viewmodel.Screen2ViewModel? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=com.example.c_feature_impl.viewmodel.Screen2ViewModel? origin=null
              context: COMPOSITE type=kotlin.Nothing? origin=DEFAULT_VALUE
                CONST Null type=kotlin.Nothing? value=null
              $composer: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
              $changed: CONST Int type=kotlin.Int value=8
              $default: CONST Int type=kotlin.Int value=1
          CALL 'public final fun Text--4IGK_g (text: kotlin.String, modifier: androidx.compose.ui.Modifier?, color: androidx.compose.ui.graphics.Color, fontSize: androidx.compose.ui.unit.TextUnit, fontStyle: androidx.compose.ui.text.font.FontStyle?, fontWeight: androidx.compose.ui.text.font.FontWeight?, fontFamily: androidx.compose.ui.text.font.FontFamily?, letterSpacing: androidx.compose.ui.unit.TextUnit, textDecoration: androidx.compose.ui.text.style.TextDecoration?, textAlign: androidx.compose.ui.text.style.TextAlign?, lineHeight: androidx.compose.ui.unit.TextUnit, overflow: androidx.compose.ui.text.style.TextOverflow, softWrap: kotlin.Boolean, maxLines: kotlin.Int, minLines: kotlin.Int, onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?, style: androidx.compose.ui.text.TextStyle?, $composer: androidx.compose.runtime.Composer?, $changed: kotlin.Int, $changed1: kotlin.Int, $default: kotlin.Int): kotlin.Unit declared in androidx.compose.material3.TextKt' type=kotlin.Unit origin=null
            text: CALL 'public abstract fun <get-value> (): T of androidx.compose.runtime.State declared in androidx.compose.runtime.State' type=kotlin.String origin=GET_PROPERTY
              $this: GET_VAR 'val state: androidx.compose.runtime.State<kotlin.String> [val] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.State<kotlin.String> origin=null
            modifier: COMPOSITE type=kotlin.Nothing? origin=DEFAULT_VALUE
              CONST Null type=kotlin.Nothing? value=null
            color: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.graphics.Color
                v: CONST Long type=kotlin.Long value=0
            fontSize: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.unit.TextUnit
                v: CONST Long type=kotlin.Long value=0
            fontStyle: COMPOSITE type=kotlin.Nothing? origin=DEFAULT_VALUE
              CONST Null type=kotlin.Nothing? value=null
            fontWeight: COMPOSITE type=kotlin.Nothing? origin=DEFAULT_VALUE
              CONST Null type=kotlin.Nothing? value=null
            fontFamily: COMPOSITE type=kotlin.Nothing? origin=DEFAULT_VALUE
              CONST Null type=kotlin.Nothing? value=null
            letterSpacing: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.unit.TextUnit
                v: CONST Long type=kotlin.Long value=0
            textDecoration: COMPOSITE type=kotlin.Nothing? origin=DEFAULT_VALUE
              CONST Null type=kotlin.Nothing? value=null
            textAlign: COMPOSITE type=kotlin.Nothing? origin=DEFAULT_VALUE
              CONST Null type=kotlin.Nothing? value=null
            lineHeight: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.unit.TextUnit
                v: CONST Long type=kotlin.Long value=0
            overflow: COMPOSITE type=androidx.compose.ui.text.style.TextOverflow origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.text.style.TextOverflow origin=null
                <T>: kotlin.Int
                <R>: androidx.compose.ui.text.style.TextOverflow
                v: CONST Int type=kotlin.Int value=0
            softWrap: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
              CONST Boolean type=kotlin.Boolean value=false
            maxLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
              CONST Int type=kotlin.Int value=0
            minLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
              CONST Int type=kotlin.Int value=0
            onTextLayout: COMPOSITE type=kotlin.Nothing? origin=DEFAULT_VALUE
              CONST Null type=kotlin.Nothing? value=null
            style: COMPOSITE type=kotlin.Nothing? origin=DEFAULT_VALUE
              CONST Null type=kotlin.Nothing? value=null
            $composer: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
            $changed: CONST Int type=kotlin.Int value=0
            $changed1: CONST Int type=kotlin.Int value=0
            $default: CONST Int type=kotlin.Int value=131070
          WHEN type=kotlin.Unit origin=IF
            BRANCH
              if: CALL 'public final fun isTraceInProgress (): kotlin.Boolean declared in androidx.compose.runtime.ComposerKt' type=kotlin.Boolean origin=null
              then: CALL 'public final fun traceEventEnd (): kotlin.Unit declared in androidx.compose.runtime.ComposerKt' type=kotlin.Unit origin=null
      BRANCH
        if: CONST Boolean type=kotlin.Boolean value=true
        then: CALL 'public abstract fun skipToGroupEnd (): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
          $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
    BLOCK type=kotlin.Unit origin=null
      BLOCK type=kotlin.Unit origin=SAFE_CALL
        VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:androidx.compose.runtime.ScopeUpdateScope? [val]
          CALL 'public abstract fun endRestartGroup (): androidx.compose.runtime.ScopeUpdateScope? declared in androidx.compose.runtime.Composer' type=androidx.compose.runtime.ScopeUpdateScope? origin=null
            $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.Composer? origin=null
        WHEN type=kotlin.Unit origin=IF
          BRANCH
            if: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
              arg0: GET_VAR 'val tmp0_safe_receiver: androidx.compose.runtime.ScopeUpdateScope? [val] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.ScopeUpdateScope? origin=null
              arg1: CONST Null type=kotlin.Any? value=null
            then: CONST Null type=kotlin.Any? value=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CALL 'public abstract fun updateScope (block: kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>): kotlin.Unit declared in androidx.compose.runtime.ScopeUpdateScope' type=kotlin.Unit origin=null
              $this: GET_VAR 'val tmp0_safe_receiver: androidx.compose.runtime.ScopeUpdateScope? [val] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=androidx.compose.runtime.ScopeUpdateScope? origin=null
              block: BLOCK type=com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> origin=null
                CLASS LAMBDA_IMPL CLASS name:<no name provided> modality:FINAL visibility:public/*package*/ superTypes:[kotlin.jvm.internal.Lambda; kotlin.Function2<androidx.compose.runtime.Composer?, kotlin.Int, kotlin.Unit>]
                  $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>
                  CONSTRUCTOR GENERATED_MEMBER_IN_CALLABLE_REFERENCE visibility:public/*package*/ <> ($viewModel:com.example.c_feature_impl.viewmodel.Screen2ViewModel?, $$changed:kotlin.Int, $$default:kotlin.Int) returnType:com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> [primary]
                    VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$viewModel index:0 type:com.example.c_feature_impl.viewmodel.Screen2ViewModel?
                    VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$$changed index:1 type:kotlin.Int
                    VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$$default index:2 type:kotlin.Int
                    BLOCK_BODY
                      SET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$viewModel type:com.example.c_feature_impl.viewmodel.Screen2ViewModel? visibility:public/*package*/ [final]' type=kotlin.Unit origin=INITIALIZER_OF_FIELD_FOR_CAPTURED_VALUE
                        receiver: GET_VAR '<this>: com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>' type=com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> origin=null
                        value: GET_VAR '$viewModel: com.example.c_feature_impl.viewmodel.Screen2ViewModel? declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>.<init>' type=com.example.c_feature_impl.viewmodel.Screen2ViewModel? origin=null
                      SET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$$changed type:kotlin.Int visibility:public/*package*/ [final]' type=kotlin.Unit origin=INITIALIZER_OF_FIELD_FOR_CAPTURED_VALUE
                        receiver: GET_VAR '<this>: com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>' type=com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> origin=null
                        value: GET_VAR '$$changed: kotlin.Int declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>.<init>' type=kotlin.Int origin=null
                      SET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$$default type:kotlin.Int visibility:public/*package*/ [final]' type=kotlin.Unit origin=INITIALIZER_OF_FIELD_FOR_CAPTURED_VALUE
                        receiver: GET_VAR '<this>: com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>' type=com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> origin=null
                        value: GET_VAR '$$default: kotlin.Int declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>.<init>' type=kotlin.Int origin=null
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> (arity: kotlin.Int) declared in kotlin.jvm.internal.Lambda'
                        arity: CONST Int type=kotlin.Int value=2
                      BLOCK type=kotlin.Unit origin=null
                  FUN name:invoke visibility:public modality:FINAL <> ($this:com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>, $composer:androidx.compose.runtime.Composer?, $force:kotlin.Int) returnType:kotlin.Unit
                    overridden:
                      public abstract fun invoke (p1: P1 of kotlin.Function2, p2: P2 of kotlin.Function2): R of kotlin.Function2 [operator] declared in kotlin.Function2
                    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>
                    VALUE_PARAMETER name:$composer index:0 type:androidx.compose.runtime.Composer?
                    VALUE_PARAMETER name:$force index:1 type:kotlin.Int
                    BLOCK_BODY
                      RETURN type=kotlin.Nothing from='public final fun invoke ($composer: androidx.compose.runtime.Composer?, $force: kotlin.Int): kotlin.Unit declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>'
                        CALL 'public final fun CMainScreen (viewModel: com.example.c_feature_impl.viewmodel.Screen2ViewModel?, $composer: androidx.compose.runtime.Composer?, $changed: kotlin.Int, $default: kotlin.Int): kotlin.Unit declared in com.example.c_feature_impl.CMainScreanKt' type=kotlin.Unit origin=null
                          viewModel: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$viewModel type:com.example.c_feature_impl.viewmodel.Screen2ViewModel? visibility:public/*package*/ [final]' type=com.example.c_feature_impl.viewmodel.Screen2ViewModel? origin=null
                            receiver: GET_VAR '<this>: com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>.invoke' type=com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> origin=null
                          $composer: GET_VAR '$composer: androidx.compose.runtime.Composer? declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>.invoke' type=androidx.compose.runtime.Composer? origin=null
                          $changed: CALL 'internal final fun updateChangedFlags (flags: kotlin.Int): kotlin.Int declared in androidx.compose.runtime.RecomposeScopeImplKt' type=kotlin.Int origin=null
                            flags: CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                              $this: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$$changed type:kotlin.Int visibility:public/*package*/ [final]' type=kotlin.Int origin=null
                                receiver: GET_VAR '<this>: com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>.invoke' type=com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> origin=null
                              other: CONST Int type=kotlin.Int value=1
                          $default: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$$default type:kotlin.Int visibility:public/*package*/ [final]' type=kotlin.Int origin=null
                            receiver: GET_VAR '<this>: com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>.invoke' type=com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> origin=null
                  FIELD FIELD_FOR_CAPTURED_VALUE name:$viewModel type:com.example.c_feature_impl.viewmodel.Screen2ViewModel? visibility:public/*package*/ [final]
                  FIELD FIELD_FOR_CAPTURED_VALUE name:$$changed type:kotlin.Int visibility:public/*package*/ [final]
                  FIELD FIELD_FOR_CAPTURED_VALUE name:$$default type:kotlin.Int visibility:public/*package*/ [final]
                  FUN BRIDGE name:invoke visibility:public modality:OPEN <> ($this:com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>, p1:kotlin.Any?, p2:kotlin.Any?) returnType:kotlin.Any?
                    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>
                    VALUE_PARAMETER BRIDGE name:p1 index:0 type:kotlin.Any?
                    VALUE_PARAMETER BRIDGE name:p2 index:1 type:kotlin.Any?
                    EXPRESSION_BODY
                      RETURN type=kotlin.Nothing from='public open fun invoke (p1: kotlin.Any?, p2: kotlin.Any?): kotlin.Any? declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>'
                        CALL 'public final fun invoke ($composer: androidx.compose.runtime.Composer?, $force: kotlin.Int): kotlin.Unit declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>' type=kotlin.Unit origin=BRIDGE_DELEGATION
                          $this: GET_VAR '<this>: com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>.invoke' type=com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> origin=null
                          $composer: TYPE_OP type=androidx.compose.runtime.Composer origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.Composer
                            GET_VAR 'p1: kotlin.Any? declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>.invoke' type=kotlin.Any? origin=null
                          $force: TYPE_OP type=kotlin.Int origin=IMPLICIT_CAST typeOperand=kotlin.Int
                            GET_VAR 'p2: kotlin.Any? declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>.invoke' type=kotlin.Any? origin=null
                CONSTRUCTOR_CALL 'public/*package*/ constructor <init> ($viewModel: com.example.c_feature_impl.viewmodel.Screen2ViewModel?, $$changed: kotlin.Int, $$default: kotlin.Int) [primary] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided>' type=com.example.c_feature_impl.CMainScreanKt.CMainScreen.<no name provided> origin=null
                  $viewModel: GET_VAR 'viewModel: com.example.c_feature_impl.viewmodel.Screen2ViewModel? [assignable] declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=com.example.c_feature_impl.viewmodel.Screen2ViewModel? origin=null
                  $$changed: GET_VAR '$changed: kotlin.Int declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null
                  $$default: GET_VAR '$default: kotlin.Int declared in com.example.c_feature_impl.CMainScreanKt.CMainScreen' type=kotlin.Int origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:51)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:43)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:391)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:408)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:170)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:44)
	at org.jetbrains.kotlin.backend.common.phaser.FileLoweringPhaseAdapter.invoke(PhaseBuilders.kt:120)
	at org.jetbrains.kotlin.backend.common.phaser.FileLoweringPhaseAdapter.invoke(PhaseBuilders.kt:116)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:147)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:94)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	... 44 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun daggerViewModel <T> (key: kotlin.String?, viewModelInstanceCreator: kotlin.Function0<T of com.example.common.compose.ViewModelKt.daggerViewModel>, $composer: androidx.compose.runtime.Composer?, $changed: kotlin.Int, $default: kotlin.Int): T of com.example.common.compose.ViewModelKt.daggerViewModel [inline] declared in com.example.common.compose.ViewModelKt' type=com.example.c_feature_impl.viewmodel.Screen2ViewModel origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:63)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:159)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:31)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:523)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:25)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetValue(ExpressionCodegen.kt:797)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetValue(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.ir.expressions.IrSetValue.accept(IrSetValue.kt:25)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:459)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:472)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitBlock(IrElementVisitor.kt:192)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:398)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.ir.expressions.IrBlock.accept(IrBlock.kt:22)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:960)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.ir.expressions.IrWhen.accept(IrWhen.kt:25)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:459)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:472)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitComposite(IrElementVisitor.kt:196)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitComposite(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitComposite(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.ir.expressions.IrComposite.accept(IrComposite.kt:22)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:960)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.ir.expressions.IrWhen.accept(IrWhen.kt:25)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:459)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:472)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitBlock(IrElementVisitor.kt:192)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:398)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.ir.expressions.IrBlock.accept(IrBlock.kt:22)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:960)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.ir.expressions.IrWhen.accept(IrWhen.kt:25)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:459)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:463)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:132)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:238)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:122)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	... 54 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Lcom/example/common/compose/ViewModelKt;.daggerViewModel(Ljava/lang/String;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;II)Landroidx/lifecycle/ViewModel;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:47)
	... 99 more


